/*
 * Copyright (c) 2023 ZitaoTech
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/ext_power.h>


#define SYM 1
#define UPPER 2
#define THAI1 3
#define THAI2 4
#define THAI3 5

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mkp LCLK>, <&bt BT_CLR>;
        };
    };
// --------------------------------------------
    behaviors {
        tdQ: tap_dance_Q {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp W>, <&kp Q>;
        };
    };

    behaviors {
        tdW: tap_dance_W {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp E>, <&kp LS(R)>, <&kp NUMBER_4>;
        };
    };

    behaviors {
        tdE: tap_dance_E {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp R>, <&kp NUMBER_5>, <&kp LS(E)>;
        };
    };

    behaviors {
        tdR: tap_dance_R {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp T>, <&kp NUMBER_6>, <&kp LS(T)>;
        };
    };

    behaviors {
        tdT: tap_dance_T {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp Y>, <&kp NUMBER_7>, <&kp LS(NUMBER_6)>;
        };
    };

    behaviors {
        tdY: tap_dance_Y {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp NUMBER_8>, <&kp U>;
        };
    };

    behaviors {
        tdU: tap_dance_U {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp I>, <&kp NUMBER_9>, <&kp LS(I)>;
        };
    };

    behaviors {
        tdI: tap_dance_I {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp O>, <&kp NUMBER_0>, <&kp Q>;
        };
    };

    behaviors {
        tdO: tap_dance_O {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp P>, <&kp MINUS>, <&kp LS(P)>;
        };
    };

    behaviors {
        tdP: tap_dance_P {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp LBKT>, <&kp EQUAL>, <&kp LS(LBKT)>;
        };
    };

// ---------------------------------------------------------
    behaviors {
        tdA: tap_dance_A {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp A>, <&kp S>, <&kp LS(A)>;
        };
    };
    behaviors {
        tdS: tap_dance_S {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp D>, <&kp F>, <&kp LS(D)>;
        };
    };
    behaviors {
        tdD: tap_dance_D {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp G>, <&kp LS(F)>;
        };
    };
    behaviors {
        tdF: tap_dance_F {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp H>, <&kp LS(H)>;
        };
    };
    behaviors {
        tdG: tap_dance_G {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp J>, <&kp LS(J)>;
        };
    };
    behaviors {
        tdH: tap_dance_H {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp K>, <&kp LS(U)>;
        };
    };
    behaviors {
        tdJ: tap_dance_J {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp L>, <&kp LS(K)>;
        };
    };
    behaviors {
        tdK: tap_dance_K {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp SEMICOLON>, <&kp LS(L)>;
        };
    };
    behaviors {
        tdL: tap_dance_L {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp APOS>, <&kp LS(SEMICOLON)>;
        };
    };
// --------------------------------------------
    behaviors {
        tdZ: tap_dance_Z {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp Z>, <&kp LS(S)>;
        };
    };
    behaviors {
        tdX: tap_dance_X {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp C>, <&kp LS(G)>;
        };
    };
    behaviors {
        tdC: tap_dance_C {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp V>, <&kp LS(C)>;
        };
    };
    behaviors {
        tdV: tap_dance_V {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp B>, <&kp LS(V)>;
        };
    };
    behaviors {
        tdB: tap_dance_B {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp N>, <&kp LS(B)>;
        };
    };
    behaviors {
        tdN: tap_dance_N {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp M>, <&kp COMMA>, <&kp LS(N)>;
        };
    };
    behaviors {
        tdM: tap_dance_M {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp DOT>, <&kp LS(DOT)>, <&kp LS(COMMA)>;
        };
    };
    behaviors {
        tdSP: tap_dance_SP {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp RBKT>, <&kp SLASH>;
        };
    };

// ---------------------------------------------

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            bindings = <&out &kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
//         --------------------------------------------------------------------------------------------------------------------------         
//         |    Shoulder Key1    |                                                                             |    Shoulder Key2    |     
// |         Call key      |      Blackberry Key        |    Trackpad    |             Back Key                |             Endcall Key          |
// |     Q      |     W    |     E    |     R    |      T      |       Y        |       U        |        I        |       O      |      P        |     
// |     A      |     S    |     D    |     F    |      G      |       H        |       J        |        K        |       L      |      ←        |  
// |     alt    |     Z    |     X    |     C    |      V      |       B        |       N        |        M        |       $      |    Enter      |   
//        |         aA     |         0           |           SPACE              |         SYM         |        aA          |       
//        -----------------------------------------------------------------------------------------------------------------

                 &mkp LCLK                                                                                          &mkp RCLK
    &kp CLCK                &kp LGUI                            &mkp LCLK                          &mt ESC K_BACK                    &kp TAB
    &kp Q        &kp W      &kp E       &kp R     &kp T         &kp Y             &kp U            &kp I            &kp O            &kp P
    &kp A        &kp S      &kp D       &kp F     &kp G         &kp H             &kp J            &kp K            &kp L            &kp BSPC
    &kp LSHFT    &kp Z      &kp X       &kp C     &kp V         &kp B             &kp N            &kp M            &kp SEMI         &kp ENTER
    &kp LCTRL               &kp LALT                            &kp SPACE                          &tog SYM                          &tog UPPER
            >;
        };


        sym_layer {

            bindings = <        
                 &kp C_VOL_UP                                                                                       &mkp C_VOL_DN
    &kp PSCRN               &kp C_AC_SEARCH                     &mkp LCLK                          &kp F5                            &kp F12 
    &kp HASH     &kp N1     &kp N2      &kp N3    &mt LBKT LPAR &mt RBKT RPAR     &kp UNDER        &kp MINUS        &kp PLUS         &kp AT
    &kp STAR     &kp N4     &kp N5      &kp N6    &kp SLASH     &kp COLON         &kp SEMI         &kp APOS         &kp DQT          &kp DEL
    &kp LSHFT    &kp N7     &kp N8      &kp N9    &kp QMARK     &kp EXCL          &kp COMMA        &kp DOT          &kp C_MUTE       &kp ENTER
    &kp LCTRL               &kp N0                              &kp SPACE                          &tog SYM                          &tog UPPER
            >;
        };

        upper_layer {

            bindings = <
                 &msc SCRL_UP                                                                                       &msc SCRL_DOWN
    &bt BT_SEL 0            &bt BT_SEL 1                             &td0                           &bt BT_SEL 2                     &bt BT_SEL 3
    &none        &kp UP     &none       &sys_reset &ext_power EP_TOG &none         &kp LT           &kp GT          &kp PIPE         &kp KP_EQUAL
    &kp LEFT     &kp DOWN   &kp RIGHT   &none      &kp BSLH          &kp AMPS      &kp LBRC         &kp RBRC        &kp CARET        &kp BSPC
    &kp LSHFT    &none      &none       &none      &bl BL_DEC        &bl BL_TOG    &bl BL_INC       &tog THAI1           &bootloader      &kp ENTER
    &kp LCTRL               &kp LALT                                 &hm OUT_TOG SPACE              &tog SYM                         &tog UPPER
            >;  
        };

        thai1_layer {
            bindings = <
                 &msc SCRL_UP                                                                                       &msc SCRL_DOWN
    &bt BT_SEL 0            &bt BT_SEL 1                             &td0                           &bt BT_SEL 2                     &bt BT_SEL 3
    &tdQ         &tdW       &tdE        &tdR       &tdT              &tdY          &tdU             &tdI            &tdO             &tdP
    &tdA         &tdS       &tdD        &tdF       &tdG              &tdH          &tdJ             &tdK            &tdL             &kp BSPC
    &kp LSHFT    &tdZ       &tdX        &tdC       &tdV              &tdB          &tdN             &tdM            &tdSP           &kp ENTER
    &kp LCTRL               &kp LALT                                 &hm OUT_TOG SPACE              &tog SYM                         &tog UPPER
            >;  
        };

    };
};
